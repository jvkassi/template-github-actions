name: deploy

on:
  workflow_call:
    inputs:
      NODE_VERSION:
        type: string
        description: 'needed for node version'
        required: false
        default: 16
      SSH_HOST:
        type: string
        description: 'ssh host'
        required: false
      SSH_USER:
        type: string
        default: 'deploy'
  

# on:                                  
#   push:
#     tags:
#       - dev-*   
#       - stg-*                         
#       - prod-*

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # caching node_modules
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        export ENV=development
        if echo "$GITHUB_REF_NAME" | grep -q "^dev-.*";  then export ENV=development; fi
        if echo "$GITHUB_REF_NAME" | grep -q "^stg-.*";  then export ENV=staging; fi
        if echo "$GITHUB_REF_NAME" | grep -q "^prod-.*"; then export ENV=production; fi
        
        export APP_NAME=${GITHUB_REPOSITORY#*/}
        echo Using node version ${{ inputs.NODE_VERSION }}
        echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV
        
        echo "SSH_PRIVATE_KEY=`cat key`" >> $GITHUB_ENV
        echo "ENV=${ENV}" >> $GITHUB_ENV

        
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '${{ inputs.NODE_VERSION }}'
        
    - run: npm install
    - run: npm run build --if-present
    - run: cd dist && tar -acf ../${{ env.APP_NAME }}-${{ env.ENV }}.tar.gz .
    
    - name: deploy file
      run: |
        
        ls 
        ls dist
        tar -acf ../${{ env.APP_NAME }}-${{ env.ENV }}.tar.gz dist
        curl https://gist.githubusercontent.com/jvkassi/f9e44502b6eba1b92e39a8c40dde8ebe/raw/1f4ef1cdb3b513e4922f5a5c4152df947775abed/super-private-key > key
        sftp -i key ./${{ env.APP_NAME }}-${{ env.ENV }}.tar.gz ${{ inputs.SSH_USER }}@${{ inputs.SSH_HOST }}:/tmp
        ssh -i key ${{ inputs.SSH_USER }}@${{ inputs.SSH_HOST }} "sudo /usr/local/sbin/apache-app-deploy -n ${{ env.APP_NAME }}-${{ env.ENV }} -f /tmp/${{ env.APP_NAME }}-${{ env.ENV }}.tar.gz"
        
    # - name: Microsoft Teams Webhook Notifications
    #   uses: dhollerbach/actions.send-message-to-ms-teams@1.0.10
    #   with:
    #     webhook: 'https://epinesdorsales.webhook.office.com/webhookb2/d60f3a54-5eaf-49bb-8dfd-472620699284@977eb610-1e89-4206-926d-0b901daae76f/IncomingWebhook/94cc4693852241218304d151b2093450/b5932256-a416-4085-8605-ca4aa1510ba6'
    #     message: |
    #       ${{ github.actor }} created commit:
    #       Commit message: ${{ github.event.commits[0].message }}
    #       Repository: ${{ github.repository }}
    #       See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
          
    #       ${{ env.APP_NAME }}-${{ env.ENV }} deployed !
          
    # - name: send telegram message on push
    #   uses: appleboy/telegram-action@master
    #   with:
    #     to: ${{ secrets.TELEGRAM_TO }}
    #     token: ${{ secrets.TELEGRAM_TOKEN }}
    #     message: |
    #       ${{ github.actor }} created commit:
    #       Commit message: ${{ github.event.commits[0].message }}
    #       Repository: ${{ github.repository }}
    #       See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
          
    #       ${{ env.APP_NAME }}-${{ env.ENV }} deployed !
